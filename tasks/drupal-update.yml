---

# Set Drush variables.
#- name: Check if a project specific Drush binary exists.
#  stat: "path={{ drupal_composer_install_dir }}/vendor/drush/drush/drush"
#  register: drush_vendor_bin
#  ignore_errors: true
#
#- name: Use project specific Drush if available.
#  set_fact:
#    drush_path: "{{ drupal_composer_install_dir }}/vendor/drush/drush/drush"
#  when: drush_vendor_bin.stat.exists

- name: 'drush updb'
  shell: 'drush updb -y {{ drush_args }}'
  args:
    chdir: "{{ ansistrano_release_path.stdout }}{{ drupal_rel_path }}"
  run_once: true

- name: 'drush cr'
  shell: 'drush cr {{ drush_args }}'
  args:
    chdir: "{{ ansistrano_release_path.stdout }}{{ drupal_rel_path }}"
  run_once: true

- name: 'drush cim'
  shell: 'drush cim -y {{ drush_args }}'
  args:
    chdir: "{{ ansistrano_release_path.stdout }}{{ drupal_rel_path }}"
  run_once: true

- name: 'drush cr'
  shell: 'drush cr {{ drush_args }}'
  args:
    chdir: "{{ ansistrano_release_path.stdout }}{{ drupal_rel_path }}"
  run_once: true

#- name: 'drush locale-update'
#  shell: 'drush locale-update -y {{ drush_args }}'
#  args:
#    chdir: "{{ ansistrano_release_path.stdout }}{{ drupal_rel_path }}"
#  run_once: true

- name: 'drush entity-updates'
  shell: 'drush entity-updates -y {{ drush_args }}'
  args:
    chdir: "{{ ansistrano_release_path.stdout }}{{ drupal_rel_path }}"
  run_once: true
